<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBgAAAEAIACIDAAAFgAAACgAAAAgAAAAMAAAAAEAIAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsODQBUDQwAVQwNAFUNCwBPEBAAQQ0NAAAA
        AAAAAAAAAAAAAAAAAABQDhAAVwwLAFgMCwBXDAwAVg4MAE0PEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUw0QAFgKCgBdCAcAagEDAE0QDgRSDQ4HUBAMBHYA
        AABeCAcAWwkJAFUKCwAAAAAASwwOAFwGBgD/AAAAUw4LBVMNDQdKFxQCYwUEAF0ICABYCgsATRMVAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKx4jAFYJCQBiBgQAWAoKFVwJCVBeCAiLXQgHrl0I
        CLpeCAewXQgIkVwJCVlaCQkbZQMCAFcICABJDhMCWwkJVl4IB5teCAi0XQgIuV0ICKZcCAh7XAgJP1cK
        CwpdBwcAUwgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFcXJABcBwgAVQoKClwICWFeBwjJXwcH+V8H
        B/9fBwf/XwcH/18HB/9fBwf/XwcH/F4HB9NdCAhvVgkIEIIAAABbCAmdXwcH/18HB/9fBwf/XwcH/18H
        B/9fBwfxXwgIsVwICEJDCgkCWAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAWwgJAFwICRZdCAibXgcH+F8H
        B/9eBwf3XQgHz10HCKhdCAiYXggIpF4IB8teBwf0XwcH/14HB/xdBwetWAgHIFoICVxcCAi6XAgInV0J
        CJpeCAiyXwcI3V8HB/5fBwf/XgcH6lwHB3BVCAgHWQoJAAAAAAAAAAAAAAAAAFQJCwBaCAoQXQcIpV8H
        B/9fBwf+XQcIvloICFJYCAoVSw4RAncAAABRExQCWAoKEFsICUVdBwiyXwcH/F8HB/9eBwe4VwkJIE0M
        DQj/AAAAkgAAAFcMCwVbCQkhXAgIb14IB9pfBwf/XgcH9lwIB3VWCwoESw0MAAAAAAAAAAAATwkMAlwH
        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
        B/9fBwf/XwcI9l4HB+BdCAjWXgcH314ICOdcCgk7WAoJFV0ICJReBwfzXwcH/18HB/9eBwfvXgcH3F4H
        B9leBwfoXwcH/V8HB/9fBwf9XQcHvlsICDhuAAAAUgkKAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAkLAHIC
        AABZCQkqXQgIjF4ICNZfBwf3XwcH/18HB/9fBwf/XwcI+VwKClxaCQkAWAsMBl0ICktdCAisXggH5l8H
        B/xfBwf/XwcH/18HB/9fBwjwXggIxF0ICWxZCAkVXwgHAFQPDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVQsNAFsICAAAfukAWgoLG1sJCkVbCQloXAgIc1sJCWpbCAlLWgsOGQAAAABbCgsAXwcIAFUM
        DQdZCQkpXAgJUVoJCWtZCQlvXAkJXVwICjdYCwwQYQUEAFoICQBFCgwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFcLDgBaCgsAXAgJAGAHBwBfBwYAXwcHAFwICQBaCg0AAAAAAAAA
        AABRERYAVwsLAFkJCQBdCAgAYAcHAGAHBwBeBwgAXQgKAFgLDABaDBAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//////4/x//wBgD/wAEAP4AAAB8AgDAOB8A+Dg+APwQfgB+EH4QfgD+GH4A/h
        h/AP4YfwD+GH4AfhB+GH4AfBg/APwcDwHwPAAAAH4AAAD/gCAB/+A4B///////////8=
</value>
  </data>
</root>